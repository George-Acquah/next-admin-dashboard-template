import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Providers from "./providers";
import { ReactNode } from "react";
import ConfigurationButton from "./configurationButton";
import dynamic from "next/dynamic";
// import Configurator from "@/components/configurator";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const Configurator = dynamic(() => import("@/components/configurator"), {
  loading: () => <></>
});

type _TRootLayoutProps = {
  children: ReactNode;
  modal: ReactNode;
};
export default function RootLayout({
  children,
  modal,
}: Readonly<_TRootLayoutProps>) {

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-white dark:bg-neutral-900`}
      >
        <Providers
          animate={true}
          attribute="class"
          defaultTheme={'dark'}
          enableSystem
          disableTransitionOnChange
        >
          {children}
          {modal}
          <ConfigurationButton />
          <Configurator />
        </Providers>
      </body>
    </html>
  );
}
